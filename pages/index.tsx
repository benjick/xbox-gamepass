import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useMemo, useState } from "react";
import styles from "../styles/Home.module.css";
import { query, orderBy, getDocs, collection } from "firebase/firestore";
import { db } from "../firebase";

const sorts = [
  "opencriticPercentRecommended",
  "opencriticAverageScore",
  "opencriticMedianScore",
];

const Home: NextPage = () => {
  const [games, setGames] = useState<any[]>([]);
  const [hidden, setHidden] = useState<string[]>([]);
  const [sort, setSort] = useState(sorts[0]);

  console.log("games", games);
  useEffect(() => {
    const ref = collection(db, "games");

    const q = query(ref, orderBy(sort, "desc"));
    getDocs(q).then((querySnapshot) => {
      const games: any[] = [];
      querySnapshot.forEach((doc) => {
        games.push(doc.data());
      });
      setGames(games);
    });
  }, [sort]);

  function hideGame(id: string) {
    setHidden((state) => [...state, id]);
  }

  const filteredGames = useMemo(() => {
    return games.filter((game) => !hidden.includes(game.id));
  }, [games, hidden]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {sorts.map((sort) => (
        <button key={sort} onClick={() => setSort(sort)}>
          {sort}
        </button>
      ))}
      <table>
        <thead>
          <tr>
            <th>Image</th>
            <th>Game</th>
            <th>Recommended (OC)</th>
            <th>Average score (OC)</th>
            <th>Median score (OC)</th>
            <th>Hide</th>
          </tr>
        </thead>
        <tbody>
          {filteredGames.map((game: any) => (
            <tr key={game.id}>
              <td>
                <img src={game.images[0]} style={{ width: 100 }} />
              </td>
              <td>{game.name}</td>
              <td>{Math.round(game.opencriticPercentRecommended)}%</td>
              <td>{Math.round(game.opencriticAverageScore)}%</td>
              <td>{Math.round(game.opencriticMedianScore)}%</td>
              <td>
                <button onClick={() => hideGame(game.id)}>Hide game</button>
              </td>
            </tr>
          ))}
          <tr></tr>
        </tbody>
      </table>
    </div>
  );
};

export default Home;
